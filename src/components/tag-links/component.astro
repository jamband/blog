---
import styles from "./styles.module.css";

type Props = {
  class?: string;
  tags: Array<string>;
};

const { class: className, tags } = Astro.props;

const _current = (pathname: string) => {
  return Astro.url.pathname === pathname ? "page" : undefined;
};
---

<ul class:list={[styles.container, styles.containerMaskBottom, className]}>
  {
    tags.map((tag) => (
      <li class={styles.tag}>
        <a
          href={`/blog/${tag}/`}
          class={styles.link}
          aria-current={_current(`/blog/${tag}/`)}
        >
          <span class={styles.symbol}>{tag}</span>
        </a>
      </li>
    ))
  }
</ul>

<script>
  import styles from "./styles.module.css";

  const container = document.querySelector(`.${styles.container}`);
  if (!container) throw new Error(`.${styles.container} does not exists.`);

  container.addEventListener("scroll", () => {
    const scrollTop = container.scrollTop;
    const scrollHeight = container.scrollHeight;
    const clientHeight = container.clientHeight;

    if (scrollTop === 0) {
      container.classList.remove(styles.containerMask, styles.containerMaskTop);
      container.classList.add(styles.containerMaskBottom);
    } else if (scrollTop + clientHeight >= scrollHeight) {
      container.classList.remove(
        styles.containerMask,
        styles.containerMaskBottom,
      );
      container.classList.add(styles.containerMaskTop);
    } else {
      container.classList.remove(
        styles.containerMaskTop,
        styles.containerMaskBottom,
      );
      container.classList.add(styles.containerMask);
    }
  });
</script>
